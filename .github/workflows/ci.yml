name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        experimental:
          - false
        ruby-version:
          - '3.4'
        include:
          - ruby-version: 'head'
            experimental: true
    # services:
    #  redis:
    #    image: redis
    #    ports:
    #      - 6379:6379
    #    options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version}}
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          # REDIS_URL: redis://localhost:6379/0
        run: |
          bin/rails db:test:prepare test test:system
          echo $? > test_exit_code.txt
        continue-on-error: ${{ matrix.experimental }}

      - name: Check nightly test result
        if: ${{ matrix.experimental }}
        id: check_nightly
        run: |
          CODE=$(cat test_exit_code.txt)
          if [ "$CODE" -ne 0 ]; then
            echo "nightly_failed=true" >> $GITHUB_OUTPUT
          else
            echo "nightly_failed=false" >> $GITHUB_OUTPUT
          fi

      - name: Post PR comment if nightly failed
        if: steps.check_nightly.outputs.nightly_failed == 'true' && github.event_name == 'pull_request'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}

          echo "Checking for existing comment..."
          COMMENT_EXISTS=$(gh api repos/$REPO/issues/$PR_NUMBER/comments \
            --jq '.[] | select(.body | contains("❗ **Nightly tests failed**"))' | wc -l)

          if [ "$COMMENT_EXISTS" -eq 0 ]; then
            echo "No existing comment found. Posting comment..."
            gh pr comment "$PR_NUMBER" \
              --body "❗ **Nightly tests failed** in CI.\n\nPlease check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details."
          else
            echo "Nightly failure comment already exists. Skipping."
          fi

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
